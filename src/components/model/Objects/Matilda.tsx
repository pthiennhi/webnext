/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 public/model/object/matilda.glb -o src/components/model/Objects/Matilda.tsx -t -k -T 
Files: public/model/object/matilda.glb [4.75MB] > matilda-transformed.glb [496.55KB] (90%)
Author: nicolekeane (https://sketchfab.com/nicolekeane)
License: CC-BY-NC-SA-4.0 (http://creativecommons.org/licenses/by-nc-sa/4.0/)
Source: https://sketchfab.com/3d-models/matilda-7ddedfb652bd4ea091bc3de27f98fc02
Title: Matilda
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    polySurface1_surfaceShader1_0: THREE.Mesh
  }
  materials: {
    surfaceShader1: THREE.MeshBasicMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Matilda(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/matilda-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh name="polySurface1_surfaceShader1_0" geometry={nodes.polySurface1_surfaceShader1_0.geometry} material={materials.surfaceShader1} />
    </group>
  )
}

useGLTF.preload('/matilda-transformed.glb')
